// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	graph "github.com/equimper/twitter/graph"
	mock "github.com/stretchr/testify/mock"
)

// QueryResolver is an autogenerated mock type for the QueryResolver type
type QueryResolver struct {
	mock.Mock
}

// Me provides a mock function with given fields: ctx
func (_m *QueryResolver) Me(ctx context.Context) (*graph.User, error) {
	ret := _m.Called(ctx)

	var r0 *graph.User
	if rf, ok := ret.Get(0).(func(context.Context) *graph.User); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*graph.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Tweets provides a mock function with given fields: ctx
func (_m *QueryResolver) Tweets(ctx context.Context) ([]*graph.Tweet, error) {
	ret := _m.Called(ctx)

	var r0 []*graph.Tweet
	if rf, ok := ret.Get(0).(func(context.Context) []*graph.Tweet); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*graph.Tweet)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
